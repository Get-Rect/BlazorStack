@using BlazorStack.Portal.Constants
@using BlazorStack.Portal.Extensions
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject NavigationManager _nav

<BlazorStack.Portal.Components.NotificationDisplay />

<div class="header primary">
    <div class="logo">
        <img src="/img/B-Sharp-Logo.jpg" alt="B# Logo" />
    </div>

    <AuthorizeView>
        <Authorized>
            <div class="profile-component" @onclick="ToggleMenu" @onmouseleave="() => isMenuVisible = false">
                <img src="@context.User.GetPhotoUrl()" alt="Profile" />
                <div class="@($"context-menu {MenuVisibilityClass}")">
                    <ul>
                        <li><a href="/account-settings">Account Settings</a></li>
                        <li><a href="@($"/logout?returnUrl={_nav.Uri}")">Logout</a></li>
                    </ul>
                </div>
            </div>
        </Authorized>
    </AuthorizeView>
</div>

<div class="@SideBarCssClass">
    <BlazorStack.Portal.Components.NavMenu OnCollapseMenu="CollapseMenu" />
</div>

<div class="main @(SideBarIsCollapsed ? "shifted" : "")">
    <div class="content">
        @Body
    </div>
</div>

@code {
    private bool SideBarIsCollapsed;
    private bool isMenuVisible = false;
    private string SideBarCssClass = "sidebar";


    private void ToggleMenu()
    {
        isMenuVisible = !isMenuVisible;
    }

    private string MenuVisibilityClass => isMenuVisible ? "visible" : "hidden";

    private void CollapseMenu()
    {
        SideBarIsCollapsed = !SideBarIsCollapsed;
        SideBarCssClass = SideBarIsCollapsed ? "sidebar collapsed" : "sidebar";
    }
}