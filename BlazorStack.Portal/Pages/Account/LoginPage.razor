@using BlazorStack.Portal.Services
@using BlazorStack.Services
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using System.ComponentModel.DataAnnotations

@page "/login"
@layout LoginLayout
@inject ApplicationAPIService _api;
@inject ILocalStorageService _localStorage;
@inject NavigationManager _nav;
@inject AuthenticationStateProvider _state;
@inject IAccountManagement _account;
@inject NotificationService _notifications;


<div class="login-card">
    <div class="left-half">
        <div class="login-logo">
            <img src="/img/B-Sharp-Logo.jpg" alt="B# Logo" />
        </div>
        <EditForm Model="loginVM" OnValidSubmit="DoLoginAsync">
            <DataAnnotationsValidator />
            <div class="flex-outer">
                <div class="form-group">
                    <InputText class="form-field" placeholder="Email" type="email" @bind-Value="loginVM.Email" />
                    <ValidationMessage For="@(() => loginVM.Email)"/>
                </div>
                <div class="form-group">
                    <InputText class="form-field" placeholder="Password" type="password" @bind-Value="loginVM.Password" />
                    <ValidationMessage For="@(() => loginVM.Password)" />
                </div>
                <div>
                    <button type="submit" class="btn btn-primary">Login</button>
                </div>
            </div>
        </EditForm>
    </div>
    <div class="right-half">
        <img src="/img/login-background.png" />
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public LoginViewModel loginVM { get; set; } = new();

    public async Task DoLoginAsync()
    {
        string error = await _account.Login(loginVM?.Email ?? string.Empty, loginVM?.Password ?? string.Empty);
        if (string.IsNullOrEmpty(error))
        {
            _nav.NavigateTo(_nav.BaseUri);
        }
        else
        {
            _notifications.ShowNotification(error, Models.NotificationType.Error);
        }
    }

    public class LoginViewModel()
    {
        [Required]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;
    }
}