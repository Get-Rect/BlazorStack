@using BlazorStack.Services
@using BlazorStack.Services.Models
@using Microsoft.AspNetCore.Authorization

@page "/users/{Id}"
@inject ApplicationAPIService _api;
@attribute [Authorize]

<div class="scrollable-card">
    @if (userDetails == null)
    {
        <p>Loading user details...</p>
    }
    else
    {
        <div class="row">
            <div class="user-photo" @onclick="AdminUploadPhoto">
                <img src="@(!string.IsNullOrEmpty(userDetails.PhotoUrl) ? @userDetails.PhotoUrl : "/img/defaultUserPhoto.png")" alt="User Photo" />
            </div>
            <div class="user-details">
                <div class="user-detail">
                    <div class="icon-field w-200">
                        <i class="text-primary fa-solid fa-envelope"></i>
                        @userDetails.Email
                    </div>
                    @if (viewingUserIsAdmin)
                    {
                        <i class="pointer text-primary fa-solid fa-pencil"></i>
                    }
                </div>
                <div class="user-detail">
                    <div class="icon-field w-200">
                        <i class="text-primary fa-solid fa-id-badge"></i>
                        @userDetails.Role
                    </div>
                    @if (viewingUserIsAdmin)
                    {
                        <i class="pointer text-primary fa-solid fa-pencil"></i>
                    }
                </div>

            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;

    private readonly string DefaultPhotoUrl = "Some file in wwwroot.";

    private UserDetailsViewModel? userDetails;

    private bool viewingUserIsAdmin = false;

    protected override async Task OnInitializedAsync()
    {
        userDetails = await _api.GetUser(Id);
        viewingUserIsAdmin = CheckIsAdmin();
    }

    private bool CheckIsAdmin()
    {
        return true;
    }

    private void AdminUploadPhoto()
    {

    }

    private void EditUserInfo()
    {

    }
}
